//
//  HomeMapView.swift
//  FoodFinder
//
//  Created by Martin Lukacs on 13/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the MVVM Xcode Templates
//

import MapKit
import Resolver
import SwiftUI

struct HomeMapView: View {
    @InjectedObject private var viewModel: HomeMapViewModel

    var body: some View {
        mainContainerView
            .alert(isPresented: $viewModel.displayAlert, content: {
                Alert(title: Text("Maps Permissions Denied"),
                      message: Text("Please enable map permission in App Settings"),
                      dismissButton: .default(Text("Go to settings"), action: {
                          UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!)
                      }))
            })
    }
}

// MARK: - Main Container

extension HomeMapView {
    private var mainContainerView: some View {
        Group {
            switch viewModel.state {
            case .loading:
                FoodFinderProgressView()
            case .localized:
                ZStack {
                    map()
                    recenterButton()
                }
            }
        }
    }
}

// MARK: - User position recenter button

extension HomeMapView {
    private func recenterButton() -> some View {
        let bottomPadding: CGFloat = 25
        let imagePadding: CGFloat = 10

        return VStack {
            Spacer()
            Button(action: {
                viewModel.resetFocus()
            }, label: {
                Image(systemName: "location.fill")
                    .font(.title2)
                    .padding(imagePadding)
                    .background(Color.primary)
                    .clipShape(Circle())
            })
        }
        .frame(maxWidth: .infinity, alignment: .trailing)
        .padding()
        .padding(.bottom, bottomPadding)
    }
}

// MARK: - Map view

extension HomeMapView {
    private func map() -> some View {
        Map(coordinateRegion: $viewModel.currentRegion, showsUserLocation: true)
            .ignoresSafeArea(.all, edges: .all)
    }
}

struct HomeMapView_Previews: PreviewProvider {
    static var previews: some View {
        HomeMapView()
    }
}
